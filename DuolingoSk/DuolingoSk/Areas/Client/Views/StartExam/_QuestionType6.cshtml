@using DuolingoSk.ViewModel;
@model QuestionVM
@{
    int Mx = Model.QuestionTime;
    int Cntc = 0;
}
<div class="question 6q" data-queid="@Model.QuestionId" data-attrtyp="@Model.QuestionTypeId">
    <div class="questionbg">
        <h1 style=" text-align: center; color: #a52929;">Copyright © SK International</h1>
        <span>
            <div class="columns">
                <div class="column is-10">
                    <div class="porgressbr">
                        <span class="is-pulled-left">
                            <p class="is-size-3 has-text-weight-semibold has-text-dark tmrvl">
                            </p>
                        </span>
                        <progress max="1" class="progress is-small is-mycolor" value="0"></progress>
                    </div>
                </div>
                <div class="column is-2">
                    <div class="vid-align is-pulled-right">
                        <video height="200px" width="100px" autoplay="autoplay" id="videoElement" muted="muted" class=" video-pad"></video>
                    </div>
                </div>
            </div>
        </span>
        <h5 class="has-text-centered is-size-3 has-text-weight-meddium">@Model.QuestionText</h5>
        <div class="columns">
            <div class="column is-offset-2 is-8">
                <div class="columns">
                    <div class="column is-5">
                        <figure class="image is-text-centered imagesection">
                            <p>@Model.QuestionOptionText</p>
                        </figure>
                    </div>
                    <div class="column is-7">
                        <div class="control">
                            <textarea placeholder="Your Response" rows="4" maxlength="500" id="txtessay" spellcheck="false" class="textarea is-shadowless"></textarea>
                            <p class="is-size-6 has-text-grey-light has-text-weight-semibold noofwrd">Number of words : 0</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="columns footsec">
            <div class="column">
                <button class="button is-primary borderremove is-borderless is-uppercase is-pulled-right has-text-weight-semibold register-btn-margin btnNxt" disabled="disabled" onclick="clearInterval(tmr);nextquestion(this);">next</button>
            </div>
        </div>
    </div>
</div>

<script>
    var tmrvl = '@Model.QuestionTime';
    var tmr;
    var noofwrd = '@Model.NoOfWords';
   $(document).ready(function () {
        $(".tmrvl").html(secondsTimeSpanToHMS(tmrvl));
       $('progress').attr('max', tmrvl);

       $("#txtessay").keyup(function () {
           var wrdcn = wordcnt();
           if ($("#txtessay").val().trim().length == 0) {
               wrdcn = 0;
           }
           if (wrdcn >= parseInt(noofwrd)) {
                $(".btnNxt").removeAttr("disabled");
           }
           else {
                $(".btnNxt").attr("disabled","disabled");
           }
           $(".noofwrd").html("Number of words : " + wrdcn);
       });
    });
    function secondsTimeSpanToHMS(s) {
    var h = Math.floor(s/3600); //Get whole hours
    s -= h*3600;
    var m = Math.floor(s/60); //Get remaining minutes
    s -= m*60;
    return (m < 10 ? '0'+m : m)+":"+(s < 10 ? '0'+s : s); //zero padding on minutes and seconds
   }

   var tmr = setInterval(function () {
        if (tmrvl == 0) {
            clearInterval(tmr);
            nextquestion();
        }
        else {
            tmrvl = tmrvl - 1;
          $(".tmrvl").html(secondsTimeSpanToHMS(tmrvl));
            $('progress').attr('value', tmrvl);
            if ($(".blockOverlay").length > 0) {
                $.unblockUI();
            }
        }
   }, 1000);

    function wordcnt() {
        var regex = /\s+/gi;
        var wordCount = $("#txtessay").val().trim().replace(regex, ' ').split(' ').length;
        return wordCount;
    }

    function SaveAns(qid) {
        if (window.localStorage.getItem('resultq') != null) {
              arryresult = JSON.parse(window.localStorage.getItem('resultq'));
         }
        var objans = { QueId: questionss[qid].QuestionId, QuestionTxt: questionss[qid].QuestionText, QuestionType: questionss[qid].QuestionTypeId, Que: questionss[qid].QuestionOptionText, Ans: $("#txtessay").val(), ExamId: exmid};
        arryresult.push(objans);
         window.localStorage.setItem('resultq',JSON.stringify(arryresult));
        var arrytemp = [];
        arrytemp.push(objans);
      var URL = '@Url.Action("SaveExamResultPartially", "StartExam")';
        //var URL = '/Client/StartExam/SaveExamResultPartially';
        $.ajax({
            url: URL,
            async: true,
            type: 'POST',
            dataType: 'json',
            data: JSON.stringify(arrytemp),
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
            }
        });
     }
</script>
