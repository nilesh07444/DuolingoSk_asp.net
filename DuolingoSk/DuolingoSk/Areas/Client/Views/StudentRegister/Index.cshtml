@using DuolingoSk.Model;
@using DuolingoSk.Models;
@model StudentVM

@{
    ViewBag.Title = "Register";
}

@{
    // Get Agent feee to display
    DuolingoSk_Entities _db = new DuolingoSk_Entities();
    tbl_GeneralSetting setting = _db.tbl_GeneralSetting.FirstOrDefault();
}
    <style>
        .modal {
            top: 25%;
            opacity: 1 !important;
        }

        .modal-header {
            padding-top: 30px;
        }
    </style>
<section class="w3l-contact-breadcrum" style="background-image: linear-gradient(to right, rgba(42, 42, 42, 0.71), rgba(38, 40, 40, 0.78)), url(/Content/client_assets/images/sk/7.jpg);">
    <div class="breadcrum-bg">
        <div class="container py-5">
            <p><a href="/">Home</a> &nbsp; / &nbsp; Register</p>
        </div>
    </div>
</section>

<!-- Login -->
<section class="w3l-contacts-12" id="contact">
    <div class="contact-top pt-5">
        <div class="container py-md-3">

            <div class="heading text-center mx-auto">
                <h3 class="head">Student Register</h3>
                <p><hr /></p>
            </div>

            <div class="row cont-main-top">

                <div class="contacts12-main col-lg-12">
                    <center>
                        @using (Html.BeginForm("Index", "StudentRegister", FormMethod.Post, new { @id = "StudentUserFormId", @class = "main-input", enctype = "multipart/form-data", role = "form", onsubmit = "return CheckRegister();"}))
                        {

                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="top-inputs d-grid col-lg-6">
                                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "text-left" })
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "", @placeholder = "Enter First Name", maxlength = "200" } })

                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>

                            <div class="top-inputs d-grid col-lg-6">
                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "text-left" })
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "", @placeholder = "Enter Last Name", maxlength = "200" } })

                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>

                            <div class="top-inputs d-grid col-lg-6">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "text-left" })
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "", @placeholder = "Enter Email Id", maxlength = "200" } })

                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>

                            <div class="top-inputs d-grid col-lg-6">
                                @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "text-left" })
                                @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "", @placeholder = "Enter Mobile No", maxlength = "200" } })

                                @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                            </div>

                            <div class="top-inputs d-grid col-lg-6">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "text-left" })
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "", @placeholder = "Enter Password", maxlength = "200" } })

                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>

                            <div class="top-inputs d-grid col-lg-6">
                                @Html.LabelFor(model => model.Dob, htmlAttributes: new { @class = "text-left" })
                                @Html.EditorFor(model => model.Dob, new { htmlAttributes = new { @class = "clsDatePicker", @placeholder = "DD/MM/YYYY", maxlength = "200", @readonly = "@readonly" } })

                                @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
                            </div>

                            <div class="top-inputs d-grid col-lg-6">
                                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "text-left" })
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "", @placeholder = "Enter Address", maxlength = "200" } })

                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>

                            <div class="top-inputs d-grid col-lg-6">
                                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "text-left" })
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "", @placeholder = "Enter City", maxlength = "200" } })

                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                            <input type="hidden" id="hdnotptxt" value="" />
                            <div class="top-inputs d-grid col-lg-6">
                                <label class="text-left">Registration Fee *</label>
                                <input type="text" placeholder="Registration Fee" value="@setting.RegistrationFee" disabled>
                            </div>
                            <div class="top-inputs d-grid col-lg-6">
                                <label class="text-left">Total Exam Attempts *</label>
                                <input type="text" placeholder="Total Exam Attempts" value="@setting.TotalExamAttempt" disabled>
                            </div>
                            <div class="text-left col-lg-6">
                                <button type="submit" class="btn btn-theme2">Sign Up</button>
                            </div>
                        }
                    </center>
                </div>
                <!-- //contact form -->

            </div>
        </div>

    </div>
</section>
<div class="modal fade open" id="otpmodal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Register OTP</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" onclick="$('#hdnotptxt').val('');$('#otptxt').val('');">&times;</button>
            </div>
            <div class="modal-body">
                <label>Enter OTP</label><input type="text" id="otptxt" value="" class="form-control" />
            </div>
            <div class="modal-footer">
                <input type="hidden" id="hdnDeleteProductItem" />
                <button data-dismiss="modal" class="btn btn-danger" type="button" onclick="$('#hdnotptxt').val('');$('#otptxt').val('');">Close</button>
                <button class="btn btn-primary" type="button" onclick="submitotp();">Submit</button>
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Content/admin_assets/js/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script>

    jQuery(document).ready(function () {

        jQuery(".clsDatePicker").datepicker({
            format: "dd/mm/yyyy",
            autoclose: true
        });

    });

    function CheckRegister() {
        if ($("#FirstName").val() == "" || $("#LastName").val() == "" || $("#MobileNo").val() == "" || $("#MobileNo").val().length < 10 || $("#Password").val() == "") {
            return false;
        }
        else {
             if ($('#hdnotptxt').val() == "") {
                 var URL = '@Url.Action("SendOTP", "StudentRegister")';
               $.ajax({
                type: 'POST',
                async: true,
                   url: URL + "?MobileNumber=" + $("#MobileNo").val(),
                success: function (result) {
                    if (result == "Mobile Number Already Exist") {
                        alert("Mobile Number Already Exist");
                        return false;
                    }
                    else if (result == "InvalidNumber")
                    {
                        alert("Invalid Mobile Number");
                        return false;
                    }
                    else {
                        alert("Otp Sent to your mobile number.");
                        $('#hdnotptxt').val(result);
                        $("#otpmodal").modal();
                    }
                },
                error: function (resultData) {
                }
            });
                return false;
            }
            else {
                return true;
            }
        }

        }

    function submitotp() {
        if ($("#otptxt").val() == "") {
            alert("Please enter otp");
            return false;
        }

        if ($("#otptxt").val() != $('#hdnotptxt').val()) {
             alert("Invalid OTP");
            return false;
        }

        $("#StudentUserFormId").submit();
    }

</script>