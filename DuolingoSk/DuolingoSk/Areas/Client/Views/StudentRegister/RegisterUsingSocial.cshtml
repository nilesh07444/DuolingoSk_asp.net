@using DuolingoSk.Model;
@using DuolingoSk.Models;
@model StudentVM

@{
    ViewBag.Title = "Register";
    PaymentGatewayVM objPaymentGateway = CommonMethod.getPaymentGatewaykeys();
}

@{
    // Get Agent feee to display
    DuolingoSk_Entities _db = new DuolingoSk_Entities();
    tbl_GeneralSetting setting = _db.tbl_GeneralSetting.FirstOrDefault();
    List<tbl_Package> lstPackges = ViewData["tbl_Packages"] as List<tbl_Package>;
}
<style>
    .customform {
        display: contents;
    }

    .modal {
        top: 25%;
        opacity: 1 !important;
    }

    .modal-header {
        padding-top: 30px;
    }
</style>

<script id="context" type="text/javascript" src="@objPaymentGateway.PaymentLayerUrl"></script>
@*<script id="context" type="text/javascript" src="https://sandbox-payments.open.money/layer"></script>
    <script id="context" type="text/javascript" src="https://payments.open.money/layer"></script>*@

<section class="w3l-contact-breadcrum" style="background-image: linear-gradient(to right, rgba(42, 42, 42, 0.71), rgba(38, 40, 40, 0.78)), url(/Content/client_assets/images/sk/7.jpg);">
    <div class="breadcrum-bg">
        <div class="container py-5">
            <p><a href="/">Home</a> &nbsp; / &nbsp; Register</p>
        </div>
    </div>
</section>

<!-- Login -->
<section class="w3l-contacts-12" id="contact">
    <div class="contact-top pt-5">
        <div class="container py-md-3">

            <div class="heading text-center mx-auto">
                <h3 class="head">Student Register</h3>
                <p><hr /></p>
            </div>

            <div class="container-fluid">

                <div class="row">
                    @using (Html.BeginForm("RegisterUsingSocial", "StudentRegister", FormMethod.Post, new { @id = "StudentUserFormId", @class = "customform", enctype = "multipart/form-data", role = "form", onsubmit = "return CheckRegister();" }))
                    {

                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group col-sm-6">
                            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Full Name", maxlength = "200" } })

                            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-sm-6">
                            @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Mobile No", maxlength = "200" } })

                            @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-sm-6">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Email Id", @readonly = "readonly", maxlength = "200" } })

                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-sm-6">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Password", maxlength = "200" } })

                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-sm-6">
                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter City", maxlength = "200" } })

                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>

                        <input type="hidden" id="hdnotptxt" value="" />
                        <input type="hidden" id="hdndisc" value="0" />
                        <div class="form-group col-sm-6">
                            <label class="">Select Package *</label>
                            <select class="form-control" name="Package" id="Package">
                                <option value="0" data-prc="0" data-attempt="0">Demo</option>
                                @if (lstPackges != null && lstPackges.Count() > 0)
                                {
                                    foreach (var objjj in lstPackges)
                                    {
                                        <option value="@objjj.PackageId" data-prc="@objjj.PackageAmount" data-attempt="@objjj.TotalAttempt">@objjj.PackageName</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="form-group col-sm-6">
                            <label class="">Registration Fee *</label>
                            <input type="text" class="form-control" placeholder="Registration Fee" id="Regfee" value="0" readonly>
                        </div>
                        <div class="form-group col-sm-6">
                            <label class="">Total Exam Attempts *</label>
                            <input type="text" class="form-control" placeholder="Total Exam Attempts" id="ExamAttempt" value="0" readonly>
                        </div>
                        <div class="form-group col-sm-6">
                            <label class="">Referral Code *</label>
                            <input type="text" class="form-control" placeholder="Promo Code" value="" name="refrealcode" id="refrealcode" onblur="resetdiscount();">

                        </div>
                        <div class="form-group col-sm-6">
                            <label class=""></label>
                            <input style="width: 25%; margin-top: 30px;" type="button" value="Apply" class="form-control btn btn-warning" onclick="checkrefrlcode();">
                        </div>

                        <input type="hidden" id="hdnPaymentId" name="hdnPaymentId" value="" />
                        <input type="hidden" id="hdnPaymentTokenId" name="hdnPaymentTokenId" value="" />
                        <div class=" col-lg-6">
                            <button type="submit" class="btn btn-theme2">Sign Up</button>
                        </div>
                    }

                </div>
                <!-- //contact form -->

            </div>
        </div>

    </div>
</section>
<div class="modal fade open" id="otpmodal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Register OTP</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" onclick="$('#hdnotptxt').val('');$('#otptxt').val('');">&times;</button>
            </div>
            <div class="modal-body">
                <label>Enter OTP</label><input type="text" id="otptxt" value="" class="form-control" />
            </div>
            <div class="modal-footer">
                <input type="hidden" id="hdnDeleteProductItem" />
                <button data-dismiss="modal" class="btn btn-danger" type="button" onclick="$('#hdnotptxt').val('');$('#otptxt').val('');">Close</button>
                <button class="btn btn-primary" type="button" onclick="submitotp();">Submit</button>
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Content/admin_assets/js/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script>
    var pymenttokn = "";
    jQuery(document).ready(function () {

        jQuery(".clsDatePicker").datepicker({
            format: "dd/mm/yyyy",
            autoclose: true
        });

        jQuery("#Package").change(function () {
            var prcc = jQuery("#Package option:selected").attr("data-prc");
            var attemmp = jQuery("#Package option:selected").attr("data-attempt");
            $("#Regfee").val(prcc);
            $("#ExamAttempt").val(attemmp);
            var regfree = parseInt(prcc);
            var disc = $("#hdndisc").val();
            if (regfree > 0) {
                var finlamtdisc = (parseFloat(prcc) * disc) / 100
                $("#Regfee").val(Math.round(parseFloat(prcc) - finlamtdisc, 2));
            }
        });
    });

    function CheckRegister() {
        if ($("#FullName").val() == "" || $("#MobileNo").val() == "" || $("#MobileNo").val().length < 10 || $("#Password").val() == "") {
            return false;
        }
        else {
            if ($('#hdnotptxt').val() == "") {

                 var URL = '@Url.Action("SendOTP", "StudentRegister")';
               $.ajax({
                type: 'POST',
                async: true,
                   url: URL + "?MobileNumber=" + $("#MobileNo").val(),
                success: function (result) {
                    if (result == "Mobile Number Already Exist") {
                        alert("Mobile Number Already Exist");
                        return false;
                    }
                    else if (result == "InvalidNumber")
                    {
                        alert("Invalid Mobile Number");
                        return false;
                    }
                    else {
                        alert("Otp Sent to your mobile number.");
                        $('#hdnotptxt').val(result);
                        $("#otpmodal").modal();
                    }
                },
                error: function (resultData) {
                }
            });
                return false;
            }
            else {
                return true;
            }
        }

        }

    function submitotp() {
        if ($("#otptxt").val() == "") {
            alert("Please enter otp");
            return false;
        }

        if ($("#otptxt").val() != $('#hdnotptxt').val()) {
             alert("Invalid OTP");
            return false;
        }
        if (jQuery("#Package option:selected").attr("data-prc") == "0") {
            $("#StudentUserFormId").submit();
        }
        else {
            GetPaymntToken();
        }


    }


    function GetPaymntToken() {
        var amt = $("#Regfee").val();
        var mobileno = $("#MobileNo").val();
        var emil = $("#Email").val();
           var URL = '@Url.Action("GetPaymentToken", "StudentRegister")';
               $.ajax({
                type: 'POST',
                async: true,
                url: URL + "?Amount=" + amt + "&MobileNumber=" + mobileno + "&Email=" + emil,
                success: function (result) {
                    if (result.indexOf("Fail") >= 0) {
                        alert(result);
                    }
                    else {
                        $("#hdnPaymentTokenId").val(result);
                        // Sandbox
                        Layer.checkout({
                            token: $("#hdnPaymentTokenId").val(),
                            accesskey: "@objPaymentGateway.PaymentAPIKey"
                            //accesskey: "415101c0-d188-11ea-9f4a-d96d3de71820"
                        },
                        //Layer.checkout({
                          //  token: $("#hdnPaymentTokenId").val(),
                            //accesskey: "8dd56630-d1a3-11ea-b4a4-cd7b8d79485d"
                        //},
                            function (response) {

                                if (response.status == "captured") {
                                    $("#hdnPaymentId").val(response.payment_id);
                                    $("#hdnPaymentTokenId").val(response.payment_token_id);
                                    $("#StudentUserFormId").submit();
                                    // response.payment_token_id
                                    // response.payment_id

                                } else if (response.status == "created") {


                                } else if (response.status == "pending") {
                                    alert("Payment Pending");

                                } else if (response.status == "failed") {
                                    alert("Payment Failed");

                                } else if (response.status == "cancelled") {
                                    alert("Payment Cancelled");
                                }
                            },
                            function (err) {
                                //integration errors
                            }
                        );
                    }
                },
                error: function (resultData) {
                }
            });
    }

    function resetdiscount() {
        if ($("#refrealcode").val() == "" || $("#hdndisc").val("0")) {
            var disc = 0;
            var regfree = parseInt(jQuery("#Package option:selected").attr("data-prc"));
            $("#hdndisc").val(0);
            if (regfree > 0) {
                var finlamtdisc = (parseFloat(regfree) * disc) / 100
                $("#Regfee").val(regfree);
            }
        }
    }

    function checkrefrlcode() {
        $("#hdndisc").val("0");
        if ($("#refrealcode").val() == "") {
            alert("Please Enter Referal Code");
            var disc = 0;
            var regfree = parseInt(jQuery("#Package option:selected").attr("data-prc"));
            $("#hdndisc").val(0);
            if (regfree > 0) {
                var finlamtdisc = (parseFloat(regfree) * disc) / 100
                $("#Regfee").val(Math.round(parseFloat(regfree) - finlamtdisc, 2));
            }
        }
        else {
          var URL = '@Url.Action("CheckCouponCode", "StudentRegister")';
               $.ajax({
                type: 'POST',
                async: true,
                   url: URL + "?couponcode=" + $("#refrealcode").val(),
                success: function (result) {
                    if (result.indexOf("Fail") >= 0) {
                        alert(result);
                        var disc = 0;
                        var regfree = parseInt(jQuery("#Package option:selected").attr("data-prc"));
                        $("#hdndisc").val(0);
                        if (regfree > 0) {
                            var finlamtdisc = (parseFloat(regfree) * disc) / 100
                            $("#Regfee").val(regfree);
                        }
                    }
                    else {
                        if (result.indexOf("Success") >= 0) {
                            var cpn = result.split('^');
                            var disc = parseFloat(cpn[1]);
                            var regfree = parseInt(jQuery("#Package option:selected").attr("data-prc"));
                            $("#hdndisc").val(disc);
                            if (regfree > 0) {
                                var finlamtdisc = (parseFloat(regfree) * disc) / 100
                                $("#Regfee").val(Math.round(parseFloat(regfree) - finlamtdisc,2));
                            }

                        }
                        else {
                            alert(result);
                            var disc = 0;
                            var regfree = parseInt(jQuery("#Package option:selected").attr("data-prc"));
                            $("#hdndisc").val(0);
                            if (regfree > 0) {
                                var finlamtdisc = (parseFloat(regfree) * disc) / 100
                                $("#Regfee").val(regfree);
                            }
                        }
                    }
                },
                error: function (resultData) {
                }
            });
        }

    }

</script>