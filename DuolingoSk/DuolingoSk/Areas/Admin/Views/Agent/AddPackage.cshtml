@model AgentPackageVM
@using DuolingoSk.Models
@{
    ViewBag.Title = "Add Package";  
}

<div class="page-body">

    <!-- Container-fluid starts-->
    <div class="container-fluid">
        <div class="page-header">
            <div class="row">
                <div class="col">
                    <div class="page-header-left">
                        <h3>
                            Add Package
                        </h3>
                    </div>
                </div>
                <div class="col-lg-6">
                    <ol class="breadcrumb pull-right">
                        <li class="breadcrumb-item"><a href="/admin/dashboard"><i data-feather="home"></i></a></li>
                        <li class="breadcrumb-item"><a href="/admin/agent/packages">Agent Packages</a></li>
                        <li class="breadcrumb-item active">Add Package</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    <!-- Container-fluid Ends-->
    <!-- Container-fluid starts-->
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-header">
                        <h5>Add Package</h5>
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm("AddPackage", "Agent", FormMethod.Post, new { @id = "AddPackageFormId", @class = "needs-validation", enctype = "multipart/form-data", role = "form" }))
                        {

                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group row">
                                @Html.LabelFor(model => model.AgentId, htmlAttributes: new { @class = "col-xl-3 col-md-4" })
                                @Html.DropDownListFor(model => model.AgentId, new SelectList(Model.AgentList, "Value", "Text"), "- Select Agent -", new { @class = "form-control col-md-8", style = "" })

                                <lable class="col-xl-3 col-md-4"></lable>
                                @Html.ValidationMessageFor(model => model.AgentId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.PackageId, htmlAttributes: new { @class = "col-xl-3 col-md-4" })
                                @Html.DropDownListFor(model => model.PackageId, new SelectList(Model.PackageList, "Value", "Text"), "- Select Package -", new { @class = "form-control col-md-8", style = "" })

                                <lable class="col-xl-3 col-md-4"></lable>
                                @Html.ValidationMessageFor(model => model.PackageId, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(model => model.PackagePrice, htmlAttributes: new { @class = "col-xl-3 col-md-4" })
                                @Html.EditorFor(model => model.PackagePrice, new { htmlAttributes = new { @class = "form-control col-md-8 uppercase", style = "width:350px;", @placeholder = "Enter Package Amount",@readonly ="readonly", maxlength = "200" } })
                                <lable class="col-xl-3 col-md-4"></lable>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(model => model.PackageAmountAgent, htmlAttributes: new { @class = "col-xl-3 col-md-4" })
                                @Html.EditorFor(model => model.PackageAmountAgent, new { htmlAttributes = new { @class = "form-control col-md-8 uppercase", style = "width:350px;", @placeholder = "Enter Package Amount", maxlength = "200" } })

                                <lable class="col-xl-3 col-md-4"></lable>
                                @Html.ValidationMessageFor(model => model.PackageAmountAgent, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group row">
                                <lable class="col-xl-3 col-md-4"></lable>
                                <button type="submit" class="btn btn-primary" style="margin-right:10px;">Submit</button>
                                <button type="button" class="btn btn-danger" id="btnCancel">Cancel</button>
                            </div>

                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Container-fluid Ends-->

</div>

<script src="~/Content/assets/js/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.10.0.min.js" type="text/javascript"></script>
<script src="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/jquery-ui.min.js" type="text/javascript"></script>
<link href="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/themes/blitzer/jquery-ui.css" rel="Stylesheet" type="text/css" />
<script>
     var pakges = @Html.Raw(Json.Encode(ViewData["lstPackges"]));
    $(document).on("click", "#btnCancel", function () {
        window.location.href = "/admin/agent/Packages";
    });

    jQuery(document).on("change", "#PackageId", function () {

        var pckid = jQuery("#PackageId option:selected").val();
        if (pckid == "") {
            $("#PackagePrice").val(0);
        }
        else {
            for (var jj = 0; jj < pakges.length; jj++) {
                if (parseInt(pckid) == pakges[jj].PackageId) {
                    $("#PackagePrice").val(pakges[jj].PackageAmount);
                }
            }
        }
      
    });
   
</script>

